<project 
        xmlns="http://maven.apache.org/POM/4.0.0" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <!-- 
        Remarks:
        1.  example1
                -jndi by remote access
                -the lookup object is self-made, and RMI-based 
                -similar to EJB session bean?
                -referece: http://itindex.net/detail/50663-rmi-jndi-%E6%9C%8D%E5%8A%A1
        2.  example2 
                -jndi by remote access
                -the lookup object is a mysql datasource
        
        Environment:
        1.  Windows 7 64 bit (assume OS installed in C:\Windows)
        2.  Eclipse 4.4
        3.  JDK 8.0
        4.  zwamp-1.1.2 (mysql)   //to do: launch it wih antrun-maven-plugin
       
       
        Approach1 - all automate
        1.  "mvn install". This will include                 
        2.  with maven-failsafe-plugin, any java file name with "IT" will be treated as 
            intergration test (by maven, the phase is integration-test). 
        3.  the integration test report can be found in \target\failsafe-reports


    -->
        
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    
    <modelVersion>4.0.0</modelVersion>
    <groupId>jndi-sun-snippets</groupId>
    <artifactId>jndi-sun-snippets</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    
    
    
    <build>  

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>   
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange>[1.8,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute>  
                                            <runOnIncremental>false</runOnIncremental>  
                                        </execute>                                            
                                    </action>
                                </pluginExecution>  
                                
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>sql-maven-plugin</artifactId>
                                        <versionRange>[1.5,)</versionRange>
                                        <goals>
                                            <goal>execute</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    
                                    <action>
                                        <execute>  
                                            <runOnIncremental>false</runOnIncremental>  
                                        </execute>  
                                    </action>
                                </pluginExecution>
                                                                      
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    
        <plugins>                      
            <!-- initialize --> 
            
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.9</version>
                    </dependency>
                </dependencies>
                
                <executions>
                    <execution>
                        <id>drop-db-before-test-if-any (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                                                
                                drop database if exists javase_jndi_sun_example2;                                                        
                            </sqlCommand>
                            <onError>continue</onError>
                        </configuration>
                    </execution>
                    

                    <execution>
                        <id>create-db (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                                                        
                                create database if not exists javase_jndi_sun_example2;                                                 
                            </sqlCommand>
                        </configuration>
                    </execution>
                                       
                                      
                    <execution>
                        <id>create-schema (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>src/main/resources/javase/jndi/sun/example2/create-schema.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>


                    <execution>
                        <id>create-data (mysql)</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <autocommit>true</autocommit>
                            <srcFiles>                                            
                                <srcFile>src/test/resources/javase/jndi/sun/example2/insert-record.sql</srcFile>
                            </srcFiles>
                        </configuration>
                                               
                    </execution>
                    
                </executions>
            </plugin>

            <!-- compile -->                  
            <plugin>                                   
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.7</source>     <!-- no specify -->
                    <target>1.7</target>
                </configuration>                         
            </plugin>  
            
            
            
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <groupId>org.apache.maven.plugins</groupId>
                <version>1.8</version>
                <executions>

                    <execution>
                        <id>javase.jndi.sun.example1 | launch-jndi </id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <target>
                                <property name="test_classpath" refid="maven.test.classpath"/>
                                <property name="plugin_classpath" refid="maven.plugin.classpath"/>

                                <echo message="test classpath:    ${test_classpath}"/>
                                <echo message="plugin classpath:  ${plugin_classpath}"/>

                                <java classname="javase.jndi.sun.example1.JndiServer" fork="true" spawn="true">      
                                    <classpath>     
                                        <path path="${test_classpath}" />
                                    </classpath>                                                                
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    
                    <execution>
                        <id>javase.jndi.sun.example2 | launch-jndi </id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <target>
                                <property name="test_classpath" refid="maven.test.classpath"/>
                                <property name="plugin_classpath" refid="maven.plugin.classpath"/>

                                <echo message="test classpath:    ${test_classpath}"/>
                                <echo message="plugin classpath:  ${plugin_classpath}"/>
                
                                <echo message="" /> 
                                <java classname="javase.jndi.sun.example2.JndiServer" fork="true" spawn="true">      
                                    <classpath>     
                                        <path path="${test_classpath}" />
                                    </classpath>                                                                
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    
                    
                    <execution>
                        <id>javase.jndi.sun.example1 | stop-jndi</id>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <target>                                                               
                                <echo message='C:\Windows\System32\taskkill.exe /F /FI "IMAGENAME eq java.ex*"' /> 
                                <exec executable="C:\Windows\System32\taskkill.exe" spawn="true">
                                    <arg value="/F /FI 'IMAGENAME eq java.ex*'" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                   </execution> 
                   
                   <execution>
                        <id>javase.jndi.sun.example2 | stop-jndi</id>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <target>                                                               
                                <echo message='C:\Windows\System32\taskkill.exe /F /FI "IMAGENAME eq java.ex*"' /> 
                                <exec executable="C:\Windows\System32\taskkill.exe" spawn="true">
                                    <arg value="/F /FI 'IMAGENAME eq java.ex*'" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                   </execution>         

                </executions>                   
            </plugin>


            <!-- integration-test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
                   
        </plugins>    
    </build>     
        

    <dependencies>
           
        <!-- junit -->                
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        
        <!-- mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.9</version>
        </dependency>
        
    </dependencies>             
</project>